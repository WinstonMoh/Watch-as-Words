<html><head><meta http-equiv="X-UA-Compatible" content="IE=edge" /><link rel="shortcut icon" href="../icons/favicon.ico" /><link rel="stylesheet" type="text/css" href="../styles/branding.css" /><link rel="stylesheet" type="text/css" href="../styles/branding-en-US.css" /><script type="text/javascript" src="../scripts/branding.js"> </script><meta http-equiv="Content-Type" content="text/html; charset=UTF-8" /><title>IAuthorizationProvider Interface</title><meta name="Language" content="en-us" /><meta name="System.Keywords" content="IAuthorizationProvider interface" /><meta name="System.Keywords" content="Microsoft.Bing.Speech.IAuthorizationProvider interface" /><meta name="System.Keywords" content="IAuthorizationProvider interface, about IAuthorizationProvider interface" /><meta name="Microsoft.Help.F1" content="Microsoft.Bing.Speech.IAuthorizationProvider" /><meta name="Microsoft.Help.Id" content="T:Microsoft.Bing.Speech.IAuthorizationProvider" /><meta name="Description" content="Interface that provides authorization for requests to the Microsoft Speech Service. Service peers are required to provide an implementation of this class to make connections to the Speech Service." /><meta name="Microsoft.Help.ContentType" content="Reference" /><meta name="BrandingAware" content="true" /><meta name="container" content="Microsoft.Bing.Speech" /><meta name="file" content="d554a715-f1e2-5f9c-5137-85ad5c8e7dc1" /><meta name="guid" content="d554a715-f1e2-5f9c-5137-85ad5c8e7dc1" /><link type="text/css" rel="stylesheet" href="../styles/highlight.css" /><script type="text/javascript" src="../scripts/highlight.js"> </script><link rel="stylesheet" type="text/css" href="../styles/branding-Website.css" /><script type="text/javascript" src="../scripts/jquery-1.11.0.min.js"></script><script type="text/javascript" src="../scripts/branding-Website.js"></script><script type="text/javascript" src="../scripts/clipboard.min.js"></script></head><body onload="OnLoad('cs')"><input type="hidden" id="userDataCache" class="userDataStyle" /><div class="pageHeader" id="PageHeader">Microsoft Bing Speech SDK<form id="SearchForm" method="get" action="#" onsubmit="javascript:TransferToSearchPage(); return false;"><input id="SearchTextBox" type="text" maxlength="200" /><button id="SearchButton" type="submit"></button></form></div><div class="pageBody"><div class="leftNav" id="leftNav"><div id="tocNav"><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="adb8f144-6e38-98c2-d8e4-0c518e72b891.htm" title="Microsoft Bing Speech SDK" tocid="roottoc">Microsoft Bing Speech SDK</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="adb8f144-6e38-98c2-d8e4-0c518e72b891.htm" title="Microsoft.Bing.Speech" tocid="adb8f144-6e38-98c2-d8e4-0c518e72b891">Microsoft.Bing.Speech</a></div><div class="toclevel1 current" data-toclevel="1" data-childrenloaded="true"><a class="tocExpanded" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="d554a715-f1e2-5f9c-5137-85ad5c8e7dc1.htm" title="IAuthorizationProvider Interface" tocid="d554a715-f1e2-5f9c-5137-85ad5c8e7dc1">IAuthorizationProvider Interface</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="e82570c8-6006-bba6-9985-957e1458d1ec.htm" title="IAuthorizationProvider Methods" tocid="e82570c8-6006-bba6-9985-957e1458d1ec">IAuthorizationProvider Methods</a></div></div><div id="tocResizableEW" onmousedown="OnMouseDown(event);"></div><div id="TocResize" class="tocResize"><img id="ResizeImageIncrease" src="../icons/TocOpen.gif" onclick="OnIncreaseToc()" alt="Click or drag to resize" title="Click or drag to resize" /><img id="ResizeImageReset" src="../icons/TocClose.gif" style="display:none" onclick="OnResetToc()" alt="Click or drag to resize" title="Click or drag to resize" /></div></div><div class="topicContent" id="TopicContent"><table class="titleTable"><tr><td class="titleColumn">IAuthorizationProvider Interface</td></tr></table><span class="introStyle"></span> <div class="summary">
            Interface that provides authorization for requests to the Microsoft Speech Service. Service peers are required to provide an implementation of this class to make connections to the Speech Service.
            </div><p> </p>
    <strong>Namespace:</strong> 
   <a href="adb8f144-6e38-98c2-d8e4-0c518e72b891.htm">Microsoft.Bing.Speech</a><br />
    <strong>Assembly:</strong>
   Microsoft.Bing.Speech (in Microsoft.Bing.Speech.dll) Version: 2.0.1.0 (2.0.1)<div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID1RB')" onkeypress="SectionExpandCollapse_CheckKey('ID1RB', event)" tabindex="0"><img id="ID1RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Syntax</span></div><div id="ID1RBSection" class="collapsibleSection"><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID0EDCA_tab1" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID0EDCA','cs','1','4');return false;">C#</a></div><div id="ID0EDCA_tab2" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID0EDCA','vb','2','4');return false;">VB</a></div><div id="ID0EDCA_tab3" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID0EDCA','cpp','3','4');return false;">C++</a></div><div id="ID0EDCA_tab4" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID0EDCA','fs','4','4');return false;">F#</a></div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EDCA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID0EDCA');return false;" title="Copy">Copy</a></div></div><div id="ID0EDCA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="identifier">IAuthorizationProvider</span></pre></div><div id="ID0EDCA_code_Div2" class="codeSnippetContainerCode" style="display: none"><pre xml:space="preserve"><span class="keyword">Public</span> <span class="keyword">Interface</span> <span class="identifier">IAuthorizationProvider</span></pre></div><div id="ID0EDCA_code_Div3" class="codeSnippetContainerCode" style="display: none"><pre xml:space="preserve"><span class="keyword">public</span> <span class="keyword">interface class</span> <span class="identifier">IAuthorizationProvider</span></pre></div><div id="ID0EDCA_code_Div4" class="codeSnippetContainerCode" style="display: none"><pre xml:space="preserve"><span class="keyword">type</span> <span class="identifier">IAuthorizationProvider</span> =  <span class="keyword">interface</span> <span class="keyword">end</span></pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EDCA");</script></div><p>The <span class="selflink">IAuthorizationProvider</span> type exposes the following members.</p><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID2RB')" onkeypress="SectionExpandCollapse_CheckKey('ID2RB', event)" tabindex="0"><img id="ID2RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Methods</span></div><div id="ID2RBSection" class="collapsibleSection"><table class="members" id="methodList"><tr><th class="iconColumn">
								 
							</th><th>Name</th><th>Description</th></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="d1da04b6-a8d9-3bfb-11ac-2920007535d5.htm">GetAuthorizationTokenAsync</a></td><td><div class="summary">
            Gets the authorization token asynchronously.
            </div></td></tr></table><a href="#PageHeader">Top</a></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID3RB')" onkeypress="SectionExpandCollapse_CheckKey('ID3RB', event)" tabindex="0"><img id="ID3RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Examples</span></div><div id="ID3RBSection" class="collapsibleSection">
            This is a sample implementation that uses <a href="https://www.microsoft.com/cognitive-services" target="_blank">Cognitive Services</a> authorization.
            <p /> For more information, refer to the <a href="https://dev.cognitive.microsoft.com/docs/services/57346a70b4769d2694911369/operations/57346edcb5816c23e4bf7421" target="_blank">Token API V1.0</a><div class="codeSnippetContainer"><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EAAABA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID0EAAABA');return false;" title="Copy">Copy</a></div></div><div id="ID0EAAABA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-comment">/// &lt;summary&gt;</span>
<span class="highlight-comment">/// Cognitive Services Authorization Provider.</span>
<span class="highlight-comment">/// &lt;/summary&gt;</span>
<span class="highlight-keyword">public</span> <span class="highlight-keyword">sealed</span> <span class="highlight-keyword">class</span> CognitiveServicesAuthorizationProvider : IAuthorizationProvider
{
    <span class="highlight-comment">/// &lt;summary&gt;</span>
    <span class="highlight-comment">/// The fetch token URI</span>
    <span class="highlight-comment">/// &lt;/summary&gt;</span>
    <span class="highlight-keyword">private</span> <span class="highlight-keyword">const</span> <span class="highlight-keyword">string</span> FetchTokenUri = <span class="highlight-literal">"https://api.cognitive.microsoft.com/sts/v1.0"</span>;

    <span class="highlight-comment">/// &lt;summary&gt;</span>
    <span class="highlight-comment">/// The subscription key</span>
    <span class="highlight-comment">/// &lt;/summary&gt;</span>
    <span class="highlight-keyword">private</span> <span class="highlight-keyword">readonly</span> <span class="highlight-keyword">string</span> subscriptionKey;

    <span class="highlight-comment">/// &lt;summary&gt;</span>
    <span class="highlight-comment">/// Initializes a new instance of the &lt;see cref="CognitiveServicesAuthorizationProvider" /&gt; class.</span>
    <span class="highlight-comment">/// &lt;/summary&gt;</span>
    <span class="highlight-comment">/// &lt;param name="subscriptionKey"&gt;The subscription identifier.&lt;/param&gt;</span>
    <span class="highlight-keyword">public</span> CognitiveServicesAuthorizationProvider(<span class="highlight-keyword">string</span> subscriptionKey)
    {
        <span class="highlight-keyword">if</span> (subscriptionKey == <span class="highlight-keyword">null</span>)
        {
            <span class="highlight-keyword">throw</span> <span class="highlight-keyword">new</span> ArgumentNullException(nameof(subscriptionKey));
        }

        <span class="highlight-keyword">if</span> (<span class="highlight-keyword">string</span>.IsNullOrWhiteSpace(subscriptionKey))
        {
            <span class="highlight-keyword">throw</span> <span class="highlight-keyword">new</span> ArgumentException(nameof(subscriptionKey));
        }

        <span class="highlight-keyword">this</span>.subscriptionKey = subscriptionKey;
    }

    <span class="highlight-comment">/// &lt;summary&gt;</span>
    <span class="highlight-comment">/// Gets the authorization token asynchronously.</span>
    <span class="highlight-comment">/// &lt;/summary&gt;</span>
    <span class="highlight-comment">/// &lt;returns&gt;</span>
    <span class="highlight-comment">/// A task that represents the asynchronous read operation. The value of the string parameter contains the next the authorization token.</span>
    <span class="highlight-comment">/// &lt;/returns&gt;</span>
    <span class="highlight-comment">/// &lt;remarks&gt;</span>
    <span class="highlight-comment">/// This method should always return a valid authorization token at the time it is called.</span>
    <span class="highlight-comment">/// &lt;/remarks&gt;</span>
    <span class="highlight-keyword">public</span> Task&lt;<span class="highlight-keyword">string</span>&gt; GetAuthorizationTokenAsync()
    {
        <span class="highlight-comment">// Use token caching instead of returning a new token every time this is called.</span>
        <span class="highlight-keyword">return</span> FetchToken(FetchTokenUri, <span class="highlight-keyword">this</span>.subscriptionKey);
    }

    <span class="highlight-comment">/// &lt;summary&gt;</span>
    <span class="highlight-comment">/// Fetches the token.</span>
    <span class="highlight-comment">/// &lt;/summary&gt;</span>
    <span class="highlight-comment">/// &lt;param name="fetchUri"&gt;The fetch URI.&lt;/param&gt;</span>
    <span class="highlight-comment">/// &lt;param name="subscriptionKey"&gt;The subscription key.&lt;/param&gt;</span>
    <span class="highlight-comment">/// &lt;returns&gt;An access token.&lt;/returns&gt;</span>
    <span class="highlight-keyword">private</span> <span class="highlight-keyword">static</span> <span class="highlight-keyword">async</span> Task&lt;<span class="highlight-keyword">string</span>&gt; FetchToken(<span class="highlight-keyword">string</span> fetchUri, <span class="highlight-keyword">string</span> subscriptionKey)
    {
        <span class="highlight-keyword">using</span> (<span class="highlight-keyword">var</span> client = <span class="highlight-keyword">new</span> HttpClient())
        {
            client.DefaultRequestHeaders.Add(<span class="highlight-literal">"Ocp-Apim-Subscription-Key"</span>, subscriptionKey);
            <span class="highlight-keyword">var</span> uriBuilder = <span class="highlight-keyword">new</span> UriBuilder(fetchUri);
            uriBuilder.Path += <span class="highlight-literal">"/issueToken"</span>;

            <span class="highlight-keyword">using</span> (<span class="highlight-keyword">var</span> result = <span class="highlight-keyword">await</span> client.PostAsync(uriBuilder.Uri.AbsoluteUri, <span class="highlight-keyword">null</span>).ConfigureAwait(<span class="highlight-keyword">false</span>))
            {
                <span class="highlight-keyword">return</span> <span class="highlight-keyword">await</span> result.Content.ReadAsStringAsync().ConfigureAwait(<span class="highlight-keyword">false</span>);
            }
        }
    }
}</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EAAABA");</script></div><div class="collapsibleAreaRegion" id="seeAlsoSection"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID4RB')" onkeypress="SectionExpandCollapse_CheckKey('ID4RB', event)" tabindex="0"><img id="ID4RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />See Also</span></div><div id="ID4RBSection" class="collapsibleSection"><h4 class="subHeading">Reference</h4><div class="seeAlsoStyle"><a href="adb8f144-6e38-98c2-d8e4-0c518e72b891.htm">Microsoft.Bing.Speech Namespace</a></div></div></div></div><div id="pageFooter" class="pageFooter"> </div></body></html>